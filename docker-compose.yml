version: '3.8'

services:
    app:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: php_app
        restart: unless-stopped
        working_dir: /var/www
        volumes:
            - ./:/var/www
        networks:
            - app_network
        depends_on:
            - db
            - redis

    db:
        image: mysql:8.0
        container_name: mysql_db
        restart: unless-stopped
        environment:
            MYSQL_ROOT_PASSWORD: root
            MYSQL_DATABASE: app_db
            MYSQL_USER: user
            MYSQL_PASSWORD: password
        ports:
            - "3306:3306"
        volumes:
            - mysql_data:/var/lib/mysql
        networks:
            - app_network

    redis:
        image: redis:latest
        container_name: redis_cache
        restart: unless-stopped
        networks:
            - app_network

    nginx:
        image: nginx:latest
        container_name: nginx_server
        restart: unless-stopped
        ports:
            - "80:80"
        volumes:
            - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
            - ./:/var/www
        depends_on:
            - app
        networks:
            - app_network

    frontend:
        image: node:20
        container_name: vue_frontend
        working_dir: /var/www/resources/js
        volumes:
            - ./:/var/www
        ports:
            - "5173:5173"
        command: ["sh", "-c", "npm install && npm run dev -- --host"]
        networks:
            - app_network
        extra_hosts:
            - "host.docker.internal:host-gateway"

networks:
    app_network:
        driver: bridge

volumes:
    mysql_data:
